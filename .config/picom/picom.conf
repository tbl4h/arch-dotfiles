# Backend to use: `xrender`, `glx`, or `egl`.
backend = "glx"; # Użyj glx dla lepszej wydajności i efektów (jak rozmycie)

#################################
#             Shadows           #
#################################

shadow = true;
shadow-radius = 7;
shadow-offset-x = -7;
shadow-offset-y = -7;
# shadow-opacity = .75 # Domyślnie 0.75 jest dobre
# shadow-color = "#000000"
# crop-shadow-to-monitor = false

#################################
#           Fading              #
#################################

fading = true;
fade-in-step = 0.03;
fade-out-step = 0.03;
# fade-delta = 10 # Domyślnie 10 jest dobre
# no-fading-openclose = false
# no-fading-destroyed-argb = false

#################################
#   Transparency / Opacity      #
#################################

# Ta sekcja jest teraz w dużej mierze zarządzana przez 'rules' poniżej.
# Zakomentowano lub usunięto stare opcje, aby uniknąć ostrzeżeń.
# frame-opacity = 0.9; # Przykład, jeśli chcesz przezroczyste ramki
# inactive-dim-fixed = true

#################################
#           Corners             #
#################################

corner-radius = 0; # Ustaw na większą wartość (np. 10), jeśli chcesz zaokrąglone rogi

#################################
#            Blur               #
#################################

# Blur background of semi-transparent / ARGB windows.
# Wymaga backend = "glx";
#blur: {
#  method = "dual_kawase"; # 'gaussian' lub 'dual_kawase' są popularne
#  strength = 5;          # Siła rozmycia (większa liczba = większe rozmycie)
#  background = true;     # Włącz rozmycie tła dla przezroczystych okien
#  # Jeśli masz problemy z dual_kawase, spróbuj: method = "gaussian";
#};
#blur-kern = "3x3box"; # Domyślny kernel rozmycia

#################################
#       General Settings        #
#################################

# dbus = true # Włącz, jeśli chcesz sterować Picom przez D-Bus (np. skryptami)
# daemon = false # Uruchom jako daemon. Zazwyczaj robisz to przez `picom -b &`

vsync = true; # Włącz VSync, aby uniknąć "tearingu"
detect-rounded-corners = true;
detect-client-opacity = true;
# use-ewmh-active-win = false
# unredir-if-possible = false
# unredir-if-possible-delay = 0
detect-transient = true;
# detect-client-leader = false
use-damage = true; # Zazwyczaj powinno być włączone dla wydajności

# Rule-based per-window options.
# TO JEST KLUCZOWA SEKCJA ZASTĘPUJĄCA STARE OPCJE PRZEZROCZYSTOŚCI
# Dodano reguły dla Alacritty, Firefoxa oraz ogólną regułę dla nieaktywnych okien.
rules: (
  {
    match = "window_type = 'tooltip'";
    fade = false;
    shadow = true;
    opacity = 80;
    full-shadow = false;
  },
  {
    match = "window_type = 'dock'    || "
            "window_type = 'desktop' || "
            "_GTK_FRAME_EXTENTS@";
    blur-background = false;
  },
  {
    match = "window_type != 'dock'";
    # shader = "my_shader.frag";
  },
  {
    match = "window_type = 'dock' || "
            "window_type = 'desktop'";
    corner-radius = 0;
  },
  {
    match = "name = 'Notification'   || "
            "class_g = 'Conky'       || "
            "class_g ?= 'Notify-osd' || "
            "class_g = 'Cairo-clock' || "
            "_GTK_FRAME_EXTENTS@";
    shadow = false;
  },
  # === Twoje reguły przezroczystości (przeniesione z opacity-rule) ===
  {
    match = "class_g = 'Alacritty'";
    opacity = 0.80; # Alacritty terminal będzie miał 80% nieprzezroczystości
  },
  {
    match = "class_g = 'firefox'";
    opacity = 0.90; # Firefox będzie miał 90% nieprzezroczystości
  },
  # Przykład: Domyślna przezroczystość dla nieaktywnych okien (zastępuje inactive-opacity)
  {
    match = "!focused"; # Dopasuj do okien, które NIE są aktywne
    opacity = 0.8;      # Ustaw nieprzezroczystość na 80% (20% przezroczystości)
  },
  # Przykład: Domyślna przezroczystość dla aktywnych okien (jeśli chcesz inną niż 1.0)
  # {
  #   match = "focused"; # Dopasuj do okien, które SĄ aktywne
  #   opacity = 0.95;    # Ustaw nieprzezroczystość na 95% (5% przezroczystości)
  # }
)

# @include "extra.conf"
